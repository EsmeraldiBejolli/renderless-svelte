---
slug: components/modal/example-component
title: A plain Modal
---

<Link href="/components/modal">Back to Modal</Link>

# Plain Modal

This example is very straightforward. When clicking one of the animals, a modal will show with the icon of that animals times the number clicked.  There is no close button, clicking on the backdrop will close the modal instead.

It links the `close` action to the backdrop to get the desired behaviour.

<script>
    import Modal from '../../../../../src/Modal.svelte'
    import Link from '../../../components/Link.svelte'
    import ActionButton from './_ActionButton.svelte'
</script>

<style>
    .backdrop {
        background: rgba(0,0,0,0.3);
        height: 100%;
        left: 0;
        margin: 0;
        position: fixed;
        top: 0;
        width: 100%;
        z-index: 200;
    }
    .modal {
        background: white;
        border: 2px solid black;
        border-radius: 4px;
        box-shadow: 10px 10px 5px 0px rgba(0,0,0,0.75);
        display: flex;
        flex-direction: column;
        justify-content: center;
        left: 50%;
        min-height: 200px;
        min-width: 200px;
        padding: 1rem;
        position: absolute;
        text-align: center;
        top: 50%;
        transform: translate(-50%, -50%);
    } 
</style>

<ActionButton animal="Squirrel" icon="🐿️" />
<ActionButton animal="Rabbit" icon="🐇" />
<ActionButton animal="Hamster" icon="🐹" />

<Modal let:payload let:close>
    <div class="backdrop" on:click="{close}">
        <div class="modal">
            <span>
                {#each Array(payload.i) as i}
                    {payload.icon}
                {/each}
            </span>
        </div>
    </div>
</Modal>

**App.svelte**

```svelte
<script>
    import Modal from 'renderless-svelte'
    import ActionButton from './ActionButton.svelte'
</script>

<style>
    .backdrop {
        background: rgba(0,0,0,0.3);
        height: 100%;
        left: 0;
        margin: 0;
        position: fixed;
        top: 0;
        width: 100%;
        z-index: 200;
    }
    .modal {
        background: white;
        border: 2px solid black;
        border-radius: 4px;
        box-shadow: 10px 10px 5px 0px rgba(0,0,0,0.75);
        display: flex;
        flex-direction: column;
        justify-content: center;
        left: 50%;
        min-height: 200px;
        min-width: 200px;
        padding: 1rem;
        position: absolute;
        text-align: center;
        top: 50%;
        transform: translate(-50%, -50%);
    } 
</style>

<ActionButton animal="Squirrel" icon="🐿️" />
<ActionButton animal="Rabbit" icon="🐇" />
<ActionButton animal="Hamster" icon="🐹" />

<Modal let:payload let:close>
    <div class="backdrop" on:click="{close}">
        <div class="modal">
            <span>
                {#each Array(payload.i) as i}
                    {payload.icon}
                {/each}
            </span>
        </div>
    </div>
</Modal>
```

**ActionButton.svelte**

```svelte
<script>
	import { openModal } from 'renderless-svelte'
    export let animal
    export let component
    export let icon

    const handleClick = () => {
        i++;

        openModal({
            animal,
            component,
            icon,
            i
        })
    }
	let i = 0
</script>

<style>
    button {
        border-radius: .5rem;
        padding: .25rem 1rem;
    }
    button:active,
    button:focus,
    button:hover {
        outline: none;
    }
</style>

<button on:click="{handleClick}">
	{animal} {icon}
</button>
```
