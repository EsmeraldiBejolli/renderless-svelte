---
slug: components/tabcontrol/example-responsive
title: A responsive TabControl
---

# Responsive TabControl

This is a variant that switches between tabs on the side of the panel or on top based on the available space.

<script>
    import { TabControl, TabControlItem } from '../../../../../src/index.js'
</script>

<style>
    .wrapper {
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;
    }
    .tabs {        
		display: flex;
        flex: 1 0 13ch;
		flex-direction: row;
        flex-wrap: wrap;
    }
    button {
        border: 1px solid #c0c0c0;
        flex: 1 0 13ch;
        padding: .25rem .5rem;
    }
    button.active {
        background-color: var(--secondary);
        color: white;
    }
    .tab {
        border: 1px solid #c0c0c0;
        display: block;
        flex: 1 0 80%;
        margin-top: 0;
        padding: 1rem;
    }
</style>

<div class="wrapper">
    <TabControl>
        <div class="tabs" slot="tabs" let:tabs>        
            {#each tabs as { active, title, select }}
                <button class:active on:click="{select}">{title}</button>
            {/each}
        </div>
        <div class="tab">
            <TabControlItem title="Squirrel 🐿️" active>
                    This is a text about Squirrels 🐿️
            </TabControlItem>
            <TabControlItem title="Rabbit 🐇">
                This is a text about Rabbits 🐇
            </TabControlItem>
            <TabControlItem title="Hamster 🐹">
                This is a text about Hamsters 🐹
            </TabControlItem>
        </div>
    </TabControl>
</div>

**App.svelte**

```svelte
<script>
    import { TabControl, TabControlItem } from 'renderless-svelte'
</script>

<style>
    .wrapper {
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;
    }
    .tabs {        
		display: flex;
        flex: 1 0 13ch;
		flex-direction: row;
        flex-wrap: wrap;
    }
    button {
        border: 1px solid #c0c0c0;
        flex: 1 0 13ch;
        padding: .25rem .5rem;
    }
    button.active {
        background-color: var(--secondary);
        color: white;
    }
    .tab {
        border: 1px solid #c0c0c0;
        display: block;
        flex: 1 0 80%;
        margin-top: 0;
        padding: 1rem;
    }
</style>

<TabControl>
    <div class="tabs" slot="tabs" let:tabs>        
        {#each tabs as { active, title, select }}
            <button class:active on:click="{select}">{title}</button>
        {/each}
    </div>
    <div class="tab">
        <TabControlItem title="Squirrel 🐿️" active>
                This is a text about Squirrels 🐿️
        </TabControlItem>
        <TabControlItem title="Rabbit 🐇">
            This is a text about Rabbits 🐇
        </TabControlItem>
        <TabControlItem title="Hamster 🐹">
            This is a text about Hamsters 🐹
        </TabControlItem>
    </div>
</TabControl>
```