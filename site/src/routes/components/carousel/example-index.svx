---
slug: components/carousel/example-index
title: A Carousel with rapid access index
---

<Link href="/components/carousel">Back to Carousel</Link>

# A Carousel with index

In this carousel there is in addition to the next and previous buttons also a rapid access index provided.

<script>
    import Carousel from '../../../../../src/Carousel.svelte'
    import Link from '../../../components/Link.svelte'
    const items = ["Squirrel 🐿️", "Rabbit 🐇", "Hamster 🐹"]
</script>

<style>
    div {
        display: flex;
        flex-direction: row;
        max-width: 400px;
        width: 100%;
    }
    .carousel > button {
        border: 1px solid #c0c0c0;
        flex: 0 0 3ch;
        padding: .75rem .5rem;
    }
    .carousel > span {
        background-color: var(--secondary);
        border: 1px solid #c0c0c0;
        flex: 1 0;
        padding: .75rem .5rem;
        text-align: center;
    }
    .selector {
        justify-content: center;
        margin-top: 0;
    }
    .selector > button {
        border: 1px solid #c0c0c0;
        border-top: 0;
        padding: .5rem .75rem;
        width: 5ch;
    }
    .selector > button.current {
        background-color: #e0e0e0;
    }
</style>

<Carousel items="{items}" let:payload let:controls let:setIndex let:currentIndex loop>
    <div class="carousel">
	    <button on:click={controls.previous}>&lt;</button>
        <span>{payload}</span>
	    <button on:click={controls.next}>&gt;</button>
    </div>
    <div class="selector">
        {#each [...Array(items.length).keys()] as i}
            <button on:click="{() => setIndex(i)}" class:current="{currentIndex == i}">{i}</button>
        {/each}
    </div>
</Carousel>

**App.svelte**

```svelte
<script>
    import Carousel from 'renderless-svelte'
    const items = ["Squirrel 🐿️", "Rabbit 🐇", "Hamster 🐹"]
</script>

<style>
    div {
        display: flex;
        flex-direction: row;
        max-width: 400px;
        width: 100%;
    }
    .carousel > button {
        border: 1px solid #c0c0c0;
        flex: 0 0 3ch;
        padding: .75rem .5rem;
    }
    .carousel > span {
        background-color: var(--secondary);
        border: 1px solid #c0c0c0;
        flex: 1 0;
        padding: .75rem .5rem;
        text-align: center;
    }
    .selector {
        justify-content: center;
        margin-top: 0;
    }
    .selector > button {
        border: 1px solid #c0c0c0;
        border-top: 0;
        padding: .5rem .75rem;
        width: 5ch;
    }
    .selector > button.current {
        background-color: #e0e0e0;
    }
</style>

<Carousel items="{items}" let:payload let:controls let:setIndex let:currentIndex loop>
    <div class="carousel">
	    <button on:click={controls.previous}>&lt;</button>
        <span>{payload}</span>
	    <button on:click={controls.next}>&gt;</button>
    </div>
    <div class="selector">
        {#each [...Array(items.length).keys()] as i}
            <button on:click="{() => setIndex(i)}" class:current="{currentIndex == i}">{i}</button>
        {/each}
    </div>
</Carousel>
```